
/*
 * -------------------------------------------------------
 * Project: Ember Frozen
 * Version: 0.0.1
 *
 * Author:  Pierpaolo Follia
 * Site:     http://madchicken.it
 * Contact: pfollia@gmail.com
 *
 *
 * Copyright (c) 2013 Pierpaolo Follia
 * -------------------------------------------------------
 */

"use strict";!function(){var converters={},get=Ember.get,set=Ember.set,getConverter=function(name){return converters[name]||SimpleConverter.create({})},setupRelationship=function(model,name,options){if("string"==typeof options.destination){var dst=get(options.destination);if(!dst){var s=options.destination.split(".");s.length&&(dst=Ember.Namespace.byName(s[0]).get(s.slice(1).join(".")))}options.destination=dst}Ember.assert("You must provide a valid model class for field "+name,null!=options.destination&&void 0!=options.destination);var rel=relationships[options.relationshipType].create({type:options.relationshipType,options:options}),data=get(model,"_data"),rels=get(model,"_relationships");set(rels,name,rel),set(data,name,void 0)},initField=function(model,name,options){if(Ember.assert("Field name must not be null",null!==name&&void 0!==name&&""!=name),get(model,"_data").hasOwnProperty(name)===!1){options=options||{},options.isRelationship?setupRelationship(model,name,options):set(model,"_data."+name,options.defaultValue);var properties=get(model,"_properties");-1===properties.indexOf(name)&&properties.push(name)}},getValue=function(model,key){var meta=model.constructor.metaForProperty(key),data=get(model,"_data");if(meta.options.isRelationship){var rel=get(model,"_relationships."+key),value=get(rel,"content");if(meta.options.embedded||value.get("isLoaded")===!0)return value;var dest=meta.options.destination.find(value.get(value.constructor.idProperty));return dest.then(function(m){rel.set("content",m)}),dest}return Ember.getWithDefault(data,key,meta.options.defaultValue)},setValue=function(model,key,value){var meta=model.constructor.metaForProperty(key),converter=getConverter(meta.type);value=converter.convert(value,meta.options);var data=get(model,"_data"),backup=get(model,"_backup"),oldValue=get(data,key);if(meta.options.isRelationship){var rel=get(model,"_relationships."+key);oldValue=get(rel,"content"),set(rel,"content",value)}else set(data,key,value);return get(backup,key)||set(backup,key,oldValue),oldValue!=value&&model._markDirty(key),key==model.constructor.idProperty&&(model[key]=value),value},attr=function(type,options){return type=type||"string",options=options||{},function(key,value){return initField(this,key,options),value=arguments.length>1?setValue(this,key,value):getValue(this,key)}.property("_data").cacheable(!1).meta({type:type,options:options})},Frzn={version:"0.8.0",attr:attr,hasMany:function(destination,options){return options=options||{},options.embedded=void 0!==options.embedded?options.embedded:!0,Frzn.registerConverter("hasMany"+destination,ModelArrayConverter.extend({})),Frzn.attr("hasMany"+destination,Ember.merge(options,{isRelationship:!0,relationshipType:"hasMany",destination:destination}))},hasOne:function(destination,options){return options=options||{},options.embedded=void 0!==options.embedded?options.embedded:!0,Frzn.registerConverter("hasOne"+destination,ModelConverter.extend({})),Frzn.attr("hasOne"+destination,Ember.merge(options,{isRelationship:!0,relationshipType:"hasOne",destination:destination}))},belongsTo:function(destination,options){return options=options||{},options.embedded=void 0!==options.embedded?options.embedded:!1,Frzn.registerConverter("belongsTo"+destination,ModelConverter.extend({})),Frzn.attr("belongsTo"+destination,Ember.merge(options,{isRelationship:!0,relationshipType:"belongsTo",destination:destination}))},registerConverter:function(name,converter){converters[name]=converter.create()},getConverter:getConverter},SimpleConverter=Ember.Object.extend({convert:function(value){return value?value.valueOf():value}}),ModelConverter=Ember.Object.extend({convert:function(value,options){return value instanceof options.destination?value:"object"==typeof value?options.destination.create(value):null}}),ModelArrayConverter=Ember.Object.extend({convert:function(value,options){if(value instanceof Array){for(var array=[],i=0;i<value.length;i++)array.push(options.destination.create(value[i]));return array}return null}});Frzn.registerConverter("string",SimpleConverter.extend({convert:function(value){return Ember.isEmpty(value)?value:new String(value).valueOf()}})),Frzn.registerConverter("boolean",SimpleConverter.extend({convert:function(value){return!!value}})),Frzn.registerConverter("object",SimpleConverter.extend({convert:function(value){return value}})),Frzn.registerConverter("number",SimpleConverter.extend({convert:function(value){if(null!==value&&void 0!==value){var num=new Number(value);return num.valueOf()}return value}})),Frzn.registerConverter("date",SimpleConverter.extend({convert:function(value){if(null!==value&&void 0!==value){if("string"==typeof value){var d=new Date(Date.parse(value));return isNaN(d.getTime())?null:d}return value instanceof Date?value:null}return value}}));var Relationship=Em.Mixin.create({getObjectClass:function(){return this.get("options.destination")},toJSON:function(){var content=this.get("content");return content?content.toJSON():null},commit:function(){var content=this.get("content");return content?content.commit():void 0},discard:function(){var content=this.get("content");return content?content.discard():void 0}}),HasManyRelationship=Ember.ArrayProxy.extend(Relationship,{init:function(){this.set("content",Em.A([])),this._super()},create:function(data){var o=this.get("options.destination").create(data);return this.pushObject(o),o},toJSON:function(){var content=this.get("content"),data=[];return content&&content.forEach(function(o){data.push(o.toJSON())}),JSON.stringify(data)},commit:function(){var content=this.get("content");content&&content.forEach(function(o){o.commit()})},discard:function(){var content=this.get("content");content&&content.forEach(function(o){o.discard()})}}),HasOneRelationship=Ember.ObjectProxy.extend(Relationship,{}),BelongsToRelationship=Ember.ObjectProxy.extend(Relationship,{}),relationships={hasOne:HasOneRelationship,hasMany:HasManyRelationship,belongsTo:BelongsToRelationship},saveState=function(model){var dirtyAttrs=get(model,"_dirtyAttributes");model.get("_backup");for(var i=0;i<dirtyAttrs.length;i++){var p=dirtyAttrs[i];model.constructor.metaForProperty(p).options.isRelationship&&model.getRel(p).commit()}return set(model,"_dirtyAttributes",[]),set(model,"_backup",{}),model},discardChanges=function(model){var backup=model.get("_backup");set(model,"_backup",{});var dirtyAttrs=get(model,"_dirtyAttributes");Ember.setProperties(model,Ember.getProperties(backup,dirtyAttrs));var relationships=get(model,"_relationships");for(var name in relationships)relationships.hasOwnProperty(name)&&model.getRel(name).discard();return set(model,"_dirtyAttributes",[]),model};Frzn.Model=Ember.Object.extend(Ember.DeferredMixin,Ember.Evented,{isAjax:!1,isLoaded:!1,isSaved:!1,isDeleted:!1,url:null,errors:null,_markDirty:function(field){var dirtyAttributes=this.get("_dirtyAttributes");-1===dirtyAttributes.indexOf(field)&&dirtyAttributes.push(field)},init:function(){this._super(),saveState(this)},getId:function(){return this.get(this.constructor.idProperty)},getRel:function(rel){return this.get("_relationships."+rel)},discard:function(){return discardChanges(this)},isDirty:function(attr){var dirtyAttributes=this.get("_dirtyAttributes");if(void 0!==attr)return!Ember.isEmpty(dirtyAttributes)&&-1!=dirtyAttributesindexOf(attr);var dirty=!1,relationships=this.get("_relationships");for(var relname in relationships)if(relationships.hasOwnProperty(relname)){var rel=relationships[relname];"hasOne"==rel.get("type")||"belongsTo"==rel.get("type")?dirty|=rel.get("content").isDirty():"hasMany"==rel.get("type")&&(dirty|=rel.get("content").reduce(function(previousValue,item){return previousValue|=item.isDirty()},!1))}return dirty||!Ember.isEmpty(dirtyAttributes)},commit:function(){return saveState(this)},toJSON:function(){for(var properties=this.get("_properties"),rel=this.get("_relationships"),keep=[],related={},i=0;i<properties.length;i++){var meta=this.constructor.metaForProperty(properties[i]);if(meta.options.isRelationship){var rel=this.getRel(properties[i]);related[properties[i]]=JSON.parse(rel.toJSON())}else keep.push(properties[i])}var base=this.getProperties(keep);return JSON.stringify(Ember.merge(base,related))},load:function(data){return this.setProperties(data),this.commit(),this},save:function(){return this.getId()?this.update():this.constructor.adapter.createRecord(this.constructor,this)},update:function(){return this.constructor.adapter.updateRecord(this.constructor,this)},remove:function(){return this.constructor.adapter.deleteRecord(this.constructor,this)},reload:function(){return this.constructor.adapter.reloadRecord(this.constructor,this)}}),Frzn.Model.reopenClass({idProperty:"id",create:function(){var C=this;this._initProperties([{_backup:{},_data:{},_dirtyAttributes:[],_properties:[],_relationships:{}}]);var instance=new C;return arguments.length>0&&instance.setProperties(arguments[0]),instance.commit(),instance},_create:Ember.Object.create,getName:function(){var name=this+"";return name&&-1!=name.lastIndexOf(".")&&(name=name.substr(name.lastIndexOf(".")+1)),name},find:function(id){Ember.assert("You must provide a valid id when searching for "+this,!!id);var record=this.create();return this.adapter.find(this,record,id)},findAll:function(){var records=Frzn.RecordArray.create({type:this});return this.adapter.findAll(this,records)},findQuery:function(params){var records=Frzn.RecordArray.create({type:this});return this.adapter.findQuery(this,records,params)},findIds:function(){var records=Frzn.RecordArray.create({type:this}),ids=Array.prototype.slice.apply(arguments);return this.adapter.findIds(this,records,ids)}}),window.Frzn=Frzn}(),!function(){var AbstractAdapter=Ember.Object.extend({extractMeta:null,_didLoad:function(data,record){record.load(data),record.set("isLoaded",!0),record.trigger("didLoad",record),record.resolve(record)},_didLoadMany:function(data,orginalData,records){records.load(data),this.extractMeta&&"function"==typeof this.extractMeta&&this.extractMeta(orginalData,records),records.resolve(records)},_didCreate:function(data,record){record.load(data),record.set("isSaved",!0),record.set("isLoaded",!0),record.trigger("didSave",record),record.resolve(record)},_didUpdate:function(data,record){record.load(data),record.set("isSaved",!0),record.set("isLoaded",!0),record.trigger("didSave",record),record.resolve(record)},_didDelete:function(data,record){record.set("isDeleted",!0),record.trigger("didDelete",record),record.resolve(record)},find:function(){Ember.assert("You must provide a valid find function for your adapter",!1)},findAll:function(){Ember.assert("You must provide a valid findAll function for your adapter",!1)},findQuery:function(){Ember.assert("You must provide a valid findQuery function for your adapter",!1)},findIds:function(){Ember.assert("You must provide a valid findIds function for your adapter",!1)},createRecord:function(){Ember.assert("You must provide a valid createRecord function for your adapter",!1)},updateRecord:function(){Ember.assert("You must provide a valid updateRecord function for your adapter",!1)},reloadRecord:function(){Ember.assert("You must provide a valid reloadRecord function for your adapter",!1)},deleteRecord:function(){Ember.assert("You must provide a valid delete function for your adapter",!1)},rootProperty:null,totalProperty:null,pageProperty:null}),RecordArray=Ember.ArrayProxy.extend(Ember.DeferredMixin,{init:function(){this._super(),this.set("meta",Em.Object.create({})),Ember.assert("You must specify a type for a record array",void 0!=this.type)},load:function(data){if(this.set("content",Em.A([])),data instanceof Array)for(var i=0;i<data.length;i++){var o=this.type.create(data[i]);o.set("isLoaded",!0),this.pushObject(o)}return this}}),InMemoryAdapter=AbstractAdapter.extend({store:null,initCollection:function(name){return this.store[name]||(this.store[name]=Em.A()),this},find:function(modelClass,record,id){var name=modelClass.getName();this.initCollection(name);var data=this.store[name].findBy(modelClass.idProperty,id);return data?this._didLoad(data,record):record.reject({errorCode:404,type:"error",message:"Object not found"}),record},findAll:function(modelClass,records){var name=modelClass.getName();if(this.initCollection(name),this.store[name]){var data=this.store[name];this._didLoadMany(data,data,records)}else records.reject({errorCode:404,type:"error",message:"Object not found"});return records},findQuery:function(modelClass,records,params){var name=modelClass.getName();if(this.initCollection(name),this.store[name]){var data=this.store[name];for(var prop in params)data=data.filterBy(prop,params[prop]);this._didLoadMany(data,data,records)}else records.reject({errorCode:404,type:"error",message:"Object not found"});return records},findIds:function(modelClass,records,ids){var name=modelClass.getName();if(this.initCollection(name),this.store[name]){for(var data=Em.A([]),index=0;index<ids.length;index++){var rec=this.store[name].findBy("id",ids[index]);data.push(rec)}this._didLoadMany(data,data,records)}else records.reject({errorCode:404,type:"error",message:"Object not found"});return records},createRecord:function(modelClass,record){var name=modelClass.getName();return this.initCollection(name),this.store[name]&&(record.set("id",this.store[name].length),this.store[name].push(record),this._didCreate(record.toJSON(),record)),record},reloadRecord:function(){},updateRecord:function(){Ember.assert("You must provide a valid updateRecord function for your adapter",!1)},deleteRecord:function(){Ember.assert("You must provide a valid delete function for your adapter",!1)}});InMemoryAdapter.reopenClass({createWithData:function(data){return InMemoryAdapter.create({store:data})}}),Frzn.AbstractAdapter=AbstractAdapter,Frzn.RecordArray=RecordArray,Frzn.InMemoryAdapter=InMemoryAdapter}(),!function(){var UrlMappingAdapter=Frzn.AbstractAdapter.extend({rootPath:"",urlMapping:{},concatenatedProperties:["urlMapping"],init:function(){this._super(),Ember.assert("You must provide a valid url map table",null!==this.get("urlMapping")&&void 0!==this.get("urlMapping")),Ember.assert("Url map table must be a valid hash object",!$.isEmptyObject(this.get("urlMapping")))},setupAjax:function(action,model,params){params=params||{};var modelClass=model.constructor;model.set("_deferred",Ember.RSVP.defer()),model instanceof Frzn.RecordArray&&(modelClass=model.type);var mapping=this.get("urlMapping").reduce(function(o,p){return Ember.merge(p,o)}),actionData=mapping[action];Ember.warn("No configuration found for action "+action,!actionData),actionData=actionData||{url:":resourceURI/",type:"GET"},actionData=Ember.copy(actionData,!0);var url=modelClass.url;url||(url=modelClass.getName(),url=url.substr(0,1).toLowerCase()+url.substr(1)),actionData.url=actionData.url.replace(":resourceURI",url);var tokens=actionData.url.match(/:([a-zA-z_-]+)/g);if(tokens&&tokens.length)for(var i=0;i<tokens.length;i++){var k=tokens[i],p=k.substr(1),v=params[p]||model.get(p);actionData.url=actionData.url.replace(k,v)}return this.rootPath&&(actionData.url=this.rootPath+url),actionData},find:function(modelClass,record,id){var config=this.setupAjax("find",record,{id:id}),adapter=this;return $.ajax(Ember.merge(config,{beforeSend:function(){record.set("isAjax",!0)},complete:function(){record.set("isAjax",!1)},success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didLoad(obj,record)},error:function(response,type,title){record.reject(response,type,title)}})),record},findAll:function(modelClass,records){var config=this.setupAjax("findAll",records),adapter=this;return $.ajax(Ember.merge(config,{success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didLoadMany(obj,data,records)},error:function(response,type,title){records.reject(response,type,title)}})),records},findQuery:function(modelClass,records,params){var config=this.setupAjax("findQuery",records,params),adapter=this;return $.ajax(Ember.merge(config,{data:params,success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didLoadMany(obj,data,records)},error:function(response,type,title){records.reject(response,type,title)}})),records},findIds:function(modelClass,records,ids){var config=this.setupAjax("findIds",records,{ids:ids}),adapter=this;return $.ajax(Ember.merge(config,{success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didLoadMany(obj,data,records)},error:function(response,type,title){records.reject(response,type,title)}})),records},createRecord:function(modelClass,record){var config=this.setupAjax("createRecord",record,record.toJSON()),adapter=this;return $.ajax(Ember.merge(config,{data:record.toJSON(),beforeSend:function(){record.set("isAjax",!0)},complete:function(){record.set("isAjax",!1)},success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didCreate(obj,record)},error:function(response,type,title){record.reject(response,type,title)}})),record},updateRecord:function(modelClass,record){var config=this.setupAjax("updateRecord",record,record.toJSON()),adapter=this;return $.ajax(Ember.merge(config,{beforeSend:function(){record.set("isAjax",!0)},complete:function(){record.set("isAjax",!1)},success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didUpdate(obj,record)},error:function(response,type,title){record.reject(response,type,title)}})),record},deleteRecord:function(modelClass,record){var config=this.setupAjax("deleteRecord",record),adapter=this;return $.ajax(Ember.merge(config,{beforeSend:function(){record.set("isAjax",!0)},complete:function(){record.set("isAjax",!1)},success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didDelete(obj,record)},error:function(response,type,title){record.reject(response,type,title)}})),record},reloadRecord:function(modelClass,record){var config=this.setupAjax("find",record,{id:record.get("id")}),adapter=this;return $.ajax(Ember.merge(config,{beforeSend:function(){record.set("isAjax",!0)},complete:function(){record.set("isAjax",!1)},success:function(data){var obj=modelClass.rootProperty?data[modelClass.rootProperty]:data;adapter._didLoad(obj,record)},error:function(response,type,title){record.set("isLoaded",!1),record.reject(response,type,title)}})),record}});Frzn.UrlMappingAdapter=UrlMappingAdapter}(),!function(){var RESTAdapter=Frzn.UrlMappingAdapter.extend({urlMapping:{find:{url:":resourceURI/:id",dataType:"json",type:"GET"},findAll:{url:":resourceURI/",dataType:"json",type:"GET"},findQuery:{url:":resourceURI/",dataType:"json",type:"GET"},findIds:{url:":resourceURI/?ids=:ids",dataType:"json",type:"GET"},createRecord:{url:":resourceURI/",dataType:"json",type:"POST"},updateRecord:{url:":resourceURI/:id",dataType:"json",type:"PUT"},deleteRecord:{url:":resourceURI/:id",dataType:"json",type:"DELETE"}}});Frzn.RESTAdapter=RESTAdapter}();